int count_bit_one1(int i)
{
	int count = 0;
	while (i)
	{
		i = i & (i - 1);
		count++;
	}
	return count;
}

int count_bit_one2(unsigned int i)
{
	int count = 0;
	while (i)
	{
		if (1 == (i & 1))
			count++;
		i = (i >> 1);

	}
	return count;
}

int main()
{
	int n = -4;
	//统计整数的二进制中1的个数
	//法一最简单高效
	int count1 = count_bit_one1(n);
	//法二
	int count2 = count_bit_one2(n);
	printf("%d\n", count1);
	printf("%d\n", count1);
	return 0;
}
